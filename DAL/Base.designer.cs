#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MaryKay")]
	public partial class BaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertCor(Cor instance);
    partial void UpdateCor(Cor instance);
    partial void DeleteCor(Cor instance);
    partial void InsertEstoque(Estoque instance);
    partial void UpdateEstoque(Estoque instance);
    partial void DeleteEstoque(Estoque instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertTipo_Produto(Tipo_Produto instance);
    partial void UpdateTipo_Produto(Tipo_Produto instance);
    partial void DeleteTipo_Produto(Tipo_Produto instance);
    partial void InsertVenda_Cliente(Venda_Cliente instance);
    partial void UpdateVenda_Cliente(Venda_Cliente instance);
    partial void DeleteVenda_Cliente(Venda_Cliente instance);
    #endregion
		
		public BaseDataContext() : 
				base(global::DAL.Properties.Settings.Default.MaryKayConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Cor> Cors
		{
			get
			{
				return this.GetTable<Cor>();
			}
		}
		
		public System.Data.Linq.Table<Estoque> Estoques
		{
			get
			{
				return this.GetTable<Estoque>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Produto> Tipo_Produtos
		{
			get
			{
				return this.GetTable<Tipo_Produto>();
			}
		}
		
		public System.Data.Linq.Table<Venda_Cliente> Venda_Clientes
		{
			get
			{
				return this.GetTable<Venda_Cliente>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Cliente;
		
		private string _Nome;
		
		private string _Email;
		
		private string _Telefone;
		
		private string _DS_Endereco;
		
		private System.Nullable<int> _NR_Logradouro;
		
		private string _DS_Bairro;
		
		private EntitySet<Venda_Cliente> _Venda_Clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClienteChanging(int value);
    partial void OnID_ClienteChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnDS_EnderecoChanging(string value);
    partial void OnDS_EnderecoChanged();
    partial void OnNR_LogradouroChanging(System.Nullable<int> value);
    partial void OnNR_LogradouroChanged();
    partial void OnDS_BairroChanging(string value);
    partial void OnDS_BairroChanged();
    #endregion
		
		public Cliente()
		{
			this._Venda_Clientes = new EntitySet<Venda_Cliente>(new Action<Venda_Cliente>(this.attach_Venda_Clientes), new Action<Venda_Cliente>(this.detach_Venda_Clientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(20)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS_Endereco", DbType="VarChar(100)")]
		public string DS_Endereco
		{
			get
			{
				return this._DS_Endereco;
			}
			set
			{
				if ((this._DS_Endereco != value))
				{
					this.OnDS_EnderecoChanging(value);
					this.SendPropertyChanging();
					this._DS_Endereco = value;
					this.SendPropertyChanged("DS_Endereco");
					this.OnDS_EnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NR_Logradouro", DbType="Int")]
		public System.Nullable<int> NR_Logradouro
		{
			get
			{
				return this._NR_Logradouro;
			}
			set
			{
				if ((this._NR_Logradouro != value))
				{
					this.OnNR_LogradouroChanging(value);
					this.SendPropertyChanging();
					this._NR_Logradouro = value;
					this.SendPropertyChanged("NR_Logradouro");
					this.OnNR_LogradouroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS_Bairro", DbType="VarChar(50)")]
		public string DS_Bairro
		{
			get
			{
				return this._DS_Bairro;
			}
			set
			{
				if ((this._DS_Bairro != value))
				{
					this.OnDS_BairroChanging(value);
					this.SendPropertyChanging();
					this._DS_Bairro = value;
					this.SendPropertyChanged("DS_Bairro");
					this.OnDS_BairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda_Cliente", Storage="_Venda_Clientes", ThisKey="ID_Cliente", OtherKey="ID_Cliente")]
		public EntitySet<Venda_Cliente> Venda_Clientes
		{
			get
			{
				return this._Venda_Clientes;
			}
			set
			{
				this._Venda_Clientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venda_Clientes(Venda_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Venda_Clientes(Venda_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cor")]
	public partial class Cor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Cor;
		
		private string _Nome_Cor;
		
		private EntitySet<Produto> _Produtos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CorChanging(int value);
    partial void OnID_CorChanged();
    partial void OnNome_CorChanging(string value);
    partial void OnNome_CorChanged();
    #endregion
		
		public Cor()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Cor
		{
			get
			{
				return this._ID_Cor;
			}
			set
			{
				if ((this._ID_Cor != value))
				{
					this.OnID_CorChanging(value);
					this.SendPropertyChanging();
					this._ID_Cor = value;
					this.SendPropertyChanged("ID_Cor");
					this.OnID_CorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_Cor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome_Cor
		{
			get
			{
				return this._Nome_Cor;
			}
			set
			{
				if ((this._Nome_Cor != value))
				{
					this.OnNome_CorChanging(value);
					this.SendPropertyChanging();
					this._Nome_Cor = value;
					this.SendPropertyChanged("Nome_Cor");
					this.OnNome_CorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cor_Produto", Storage="_Produtos", ThisKey="ID_Cor", OtherKey="ID_Cor")]
		public EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Cor = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Cor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estoque")]
	public partial class Estoque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Estoque;
		
		private System.Nullable<int> _ID_Produto;
		
		private int _QTD_Item;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EstoqueChanging(int value);
    partial void OnID_EstoqueChanged();
    partial void OnID_ProdutoChanging(System.Nullable<int> value);
    partial void OnID_ProdutoChanged();
    partial void OnQTD_ItemChanging(int value);
    partial void OnQTD_ItemChanged();
    #endregion
		
		public Estoque()
		{
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Estoque", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Estoque
		{
			get
			{
				return this._ID_Estoque;
			}
			set
			{
				if ((this._ID_Estoque != value))
				{
					this.OnID_EstoqueChanging(value);
					this.SendPropertyChanging();
					this._ID_Estoque = value;
					this.SendPropertyChanged("ID_Estoque");
					this.OnID_EstoqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produto", DbType="Int")]
		public System.Nullable<int> ID_Produto
		{
			get
			{
				return this._ID_Produto;
			}
			set
			{
				if ((this._ID_Produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProdutoChanging(value);
					this.SendPropertyChanging();
					this._ID_Produto = value;
					this.SendPropertyChanged("ID_Produto");
					this.OnID_ProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD_Item", DbType="Int NOT NULL")]
		public int QTD_Item
		{
			get
			{
				return this._QTD_Item;
			}
			set
			{
				if ((this._QTD_Item != value))
				{
					this.OnQTD_ItemChanging(value);
					this.SendPropertyChanging();
					this._QTD_Item = value;
					this.SendPropertyChanged("QTD_Item");
					this.OnQTD_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Estoque", Storage="_Produto", ThisKey="ID_Produto", OtherKey="ID_Produto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Estoques.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Estoques.Add(this);
						this._ID_Produto = value.ID_Produto;
					}
					else
					{
						this._ID_Produto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Produto;
		
		private System.Nullable<int> _ID_TipoProduto;
		
		private System.Nullable<int> _ID_Cor;
		
		private string _Nome;
		
		private System.Nullable<int> _Ponto;
		
		private System.Nullable<decimal> _VL_Pago;
		
		private decimal _VL_Venda;
		
		private int _Quantidade;
		
		private EntitySet<Estoque> _Estoques;
		
		private EntitySet<Venda_Cliente> _Venda_Clientes;
		
		private EntityRef<Cor> _Cor;
		
		private EntityRef<Tipo_Produto> _Tipo_Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProdutoChanging(int value);
    partial void OnID_ProdutoChanged();
    partial void OnID_TipoProdutoChanging(System.Nullable<int> value);
    partial void OnID_TipoProdutoChanged();
    partial void OnID_CorChanging(System.Nullable<int> value);
    partial void OnID_CorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPontoChanging(System.Nullable<int> value);
    partial void OnPontoChanged();
    partial void OnVL_PagoChanging(System.Nullable<decimal> value);
    partial void OnVL_PagoChanged();
    partial void OnVL_VendaChanging(decimal value);
    partial void OnVL_VendaChanged();
    partial void OnQuantidadeChanging(int value);
    partial void OnQuantidadeChanged();
    #endregion
		
		public Produto()
		{
			this._Estoques = new EntitySet<Estoque>(new Action<Estoque>(this.attach_Estoques), new Action<Estoque>(this.detach_Estoques));
			this._Venda_Clientes = new EntitySet<Venda_Cliente>(new Action<Venda_Cliente>(this.attach_Venda_Clientes), new Action<Venda_Cliente>(this.detach_Venda_Clientes));
			this._Cor = default(EntityRef<Cor>);
			this._Tipo_Produto = default(EntityRef<Tipo_Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Produto
		{
			get
			{
				return this._ID_Produto;
			}
			set
			{
				if ((this._ID_Produto != value))
				{
					this.OnID_ProdutoChanging(value);
					this.SendPropertyChanging();
					this._ID_Produto = value;
					this.SendPropertyChanged("ID_Produto");
					this.OnID_ProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TipoProduto", DbType="Int")]
		public System.Nullable<int> ID_TipoProduto
		{
			get
			{
				return this._ID_TipoProduto;
			}
			set
			{
				if ((this._ID_TipoProduto != value))
				{
					if (this._Tipo_Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TipoProdutoChanging(value);
					this.SendPropertyChanging();
					this._ID_TipoProduto = value;
					this.SendPropertyChanged("ID_TipoProduto");
					this.OnID_TipoProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cor", DbType="Int")]
		public System.Nullable<int> ID_Cor
		{
			get
			{
				return this._ID_Cor;
			}
			set
			{
				if ((this._ID_Cor != value))
				{
					if (this._Cor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CorChanging(value);
					this.SendPropertyChanging();
					this._ID_Cor = value;
					this.SendPropertyChanged("ID_Cor");
					this.OnID_CorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ponto", DbType="Int")]
		public System.Nullable<int> Ponto
		{
			get
			{
				return this._Ponto;
			}
			set
			{
				if ((this._Ponto != value))
				{
					this.OnPontoChanging(value);
					this.SendPropertyChanging();
					this._Ponto = value;
					this.SendPropertyChanged("Ponto");
					this.OnPontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VL_Pago", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> VL_Pago
		{
			get
			{
				return this._VL_Pago;
			}
			set
			{
				if ((this._VL_Pago != value))
				{
					this.OnVL_PagoChanging(value);
					this.SendPropertyChanging();
					this._VL_Pago = value;
					this.SendPropertyChanged("VL_Pago");
					this.OnVL_PagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VL_Venda", DbType="Decimal(5,2) NOT NULL")]
		public decimal VL_Venda
		{
			get
			{
				return this._VL_Venda;
			}
			set
			{
				if ((this._VL_Venda != value))
				{
					this.OnVL_VendaChanging(value);
					this.SendPropertyChanging();
					this._VL_Venda = value;
					this.SendPropertyChanged("VL_Venda");
					this.OnVL_VendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Int NOT NULL")]
		public int Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this.OnQuantidadeChanging(value);
					this.SendPropertyChanging();
					this._Quantidade = value;
					this.SendPropertyChanged("Quantidade");
					this.OnQuantidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Estoque", Storage="_Estoques", ThisKey="ID_Produto", OtherKey="ID_Produto")]
		public EntitySet<Estoque> Estoques
		{
			get
			{
				return this._Estoques;
			}
			set
			{
				this._Estoques.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Venda_Cliente", Storage="_Venda_Clientes", ThisKey="ID_Produto", OtherKey="ID_Produto")]
		public EntitySet<Venda_Cliente> Venda_Clientes
		{
			get
			{
				return this._Venda_Clientes;
			}
			set
			{
				this._Venda_Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cor_Produto", Storage="_Cor", ThisKey="ID_Cor", OtherKey="ID_Cor", IsForeignKey=true)]
		public Cor Cor
		{
			get
			{
				return this._Cor.Entity;
			}
			set
			{
				Cor previousValue = this._Cor.Entity;
				if (((previousValue != value) 
							|| (this._Cor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cor.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Cor.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._ID_Cor = value.ID_Cor;
					}
					else
					{
						this._ID_Cor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Produto_Produto", Storage="_Tipo_Produto", ThisKey="ID_TipoProduto", OtherKey="ID_TipoProduto", IsForeignKey=true)]
		public Tipo_Produto Tipo_Produto
		{
			get
			{
				return this._Tipo_Produto.Entity;
			}
			set
			{
				Tipo_Produto previousValue = this._Tipo_Produto.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Produto.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Tipo_Produto.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._ID_TipoProduto = value.ID_TipoProduto;
					}
					else
					{
						this._ID_TipoProduto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo_Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estoques(Estoque entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Estoques(Estoque entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_Venda_Clientes(Venda_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Venda_Clientes(Venda_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Produto")]
	public partial class Tipo_Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TipoProduto;
		
		private string _Categoria;
		
		private EntitySet<Produto> _Produtos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TipoProdutoChanging(int value);
    partial void OnID_TipoProdutoChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    #endregion
		
		public Tipo_Produto()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TipoProduto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_TipoProduto
		{
			get
			{
				return this._ID_TipoProduto;
			}
			set
			{
				if ((this._ID_TipoProduto != value))
				{
					this.OnID_TipoProdutoChanging(value);
					this.SendPropertyChanging();
					this._ID_TipoProduto = value;
					this.SendPropertyChanged("ID_TipoProduto");
					this.OnID_TipoProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Produto_Produto", Storage="_Produtos", ThisKey="ID_TipoProduto", OtherKey="ID_TipoProduto")]
		public EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Produto = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venda_Cliente")]
	public partial class Venda_Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Venda;
		
		private System.Nullable<int> _ID_Produto;
		
		private System.Nullable<int> _ID_Cliente;
		
		private System.DateTime _DT_Venda;
		
		private int _QTD_Item;
		
		private decimal _VL_Total;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_VendaChanging(int value);
    partial void OnID_VendaChanged();
    partial void OnID_ProdutoChanging(System.Nullable<int> value);
    partial void OnID_ProdutoChanged();
    partial void OnID_ClienteChanging(System.Nullable<int> value);
    partial void OnID_ClienteChanged();
    partial void OnDT_VendaChanging(System.DateTime value);
    partial void OnDT_VendaChanged();
    partial void OnQTD_ItemChanging(int value);
    partial void OnQTD_ItemChanged();
    partial void OnVL_TotalChanging(decimal value);
    partial void OnVL_TotalChanged();
    #endregion
		
		public Venda_Cliente()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Venda", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Venda
		{
			get
			{
				return this._ID_Venda;
			}
			set
			{
				if ((this._ID_Venda != value))
				{
					this.OnID_VendaChanging(value);
					this.SendPropertyChanging();
					this._ID_Venda = value;
					this.SendPropertyChanged("ID_Venda");
					this.OnID_VendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produto", DbType="Int")]
		public System.Nullable<int> ID_Produto
		{
			get
			{
				return this._ID_Produto;
			}
			set
			{
				if ((this._ID_Produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProdutoChanging(value);
					this.SendPropertyChanging();
					this._ID_Produto = value;
					this.SendPropertyChanged("ID_Produto");
					this.OnID_ProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", DbType="Int")]
		public System.Nullable<int> ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT_Venda", DbType="DateTime NOT NULL")]
		public System.DateTime DT_Venda
		{
			get
			{
				return this._DT_Venda;
			}
			set
			{
				if ((this._DT_Venda != value))
				{
					this.OnDT_VendaChanging(value);
					this.SendPropertyChanging();
					this._DT_Venda = value;
					this.SendPropertyChanged("DT_Venda");
					this.OnDT_VendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD_Item", DbType="Int NOT NULL")]
		public int QTD_Item
		{
			get
			{
				return this._QTD_Item;
			}
			set
			{
				if ((this._QTD_Item != value))
				{
					this.OnQTD_ItemChanging(value);
					this.SendPropertyChanging();
					this._QTD_Item = value;
					this.SendPropertyChanged("QTD_Item");
					this.OnQTD_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VL_Total", DbType="Decimal(5,2) NOT NULL")]
		public decimal VL_Total
		{
			get
			{
				return this._VL_Total;
			}
			set
			{
				if ((this._VL_Total != value))
				{
					this.OnVL_TotalChanging(value);
					this.SendPropertyChanging();
					this._VL_Total = value;
					this.SendPropertyChanged("VL_Total");
					this.OnVL_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda_Cliente", Storage="_Cliente", ThisKey="ID_Cliente", OtherKey="ID_Cliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Venda_Clientes.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Venda_Clientes.Add(this);
						this._ID_Cliente = value.ID_Cliente;
					}
					else
					{
						this._ID_Cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Venda_Cliente", Storage="_Produto", ThisKey="ID_Produto", OtherKey="ID_Produto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Venda_Clientes.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Venda_Clientes.Add(this);
						this._ID_Produto = value.ID_Produto;
					}
					else
					{
						this._ID_Produto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
